#!/bin/bash

# Edit the variables in this file, then execute the create/delete/scale/status scripts as needed

if [ "${1}" == "--dry-run" ]; then
    export DRY_RUN="true"
else
    unset DRY_RUN
fi

# CONFIG - configuration type for EKS, CONFIG=conf(default)|yaml
# Set CONFIG=yaml and edit eks.yaml to use advanced cluster configuration options
# like efaEnabled.
# Refer to yaml file schema here: https://eksctl.io/usage/schema/
# or examples here: https://github.com/weaveworks/eksctl/tree/main/examples
export CONFIG=yaml

# EKS_YAML - path to cluster yaml manifest to use in case CONFIG=yaml
export EKS_YAML=./eks.yaml

# EKS Cluster
export CLUSTER_NAME=do-eks
export CLUSTER_REGION=us-east-1
export CLUSTER_ZONES=us-east-1a,us-east-1b,us-east-1c,us-east-1d
export CLUSTER_K8S_VERSION=1.21
export CLUSTER_VPC_CIDR=172.33.0.0/16
export CLUSTER_SYSTEM_NODEGROUP_NAME=system
export CLUSTER_SYSTEM_NODEGROUP_INSTANCE_TYPE=c5.xlarge
export CLUSTER_SYSTEM_NODEGROUP_OPTIONS="--node-type ${CLUSTER_SYSTEM_NODEGROUP_INSTANCE_TYPE} \
--nodes-min 1 --nodes-max 10 --nodes 1 --node-private-networking \
--asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access --managed"
# --ssh-public-key <path to keyfile>
export CLUSTER_OPTIONS="--nodegroup-name ${CLUSTER_SYSTEM_NODEGROUP_NAME} ${CLUSTER_SYSTEM_NODEGROUP_OPTIONS}"
export CLUSTER_AUTOSCALER_DEPLOY="false"
export CLUSTER_AUTOSCALER_IMAGE_TAG="v1.21.0"

# CPU Nodegroups
export CPU_NODEGROUP_INSTANCE_TYPES=()
export CPU_NODEGROUP_SIZES=()
export CPU_NODEGROUP_OPTIONS="--region ${CLUSTER_REGION} --nodes-min 1 --nodes-max 10 --nodes 1 --node-volume-size 60 --node-volume-type gp3 --node-ami-family AmazonLinux2 \
--node-private-networking --node-labels processor=cpu --asg-access --external-dns-access --full-ecr-access --alb-ingress-access \
--appmesh-access --managed"
# --ssh-public-key <path to keyfile>
# --spot

# GPU Nodegroups
export GPU_NODEGROUP_INSTANCE_TYPES=(p3dn.24xlarge p4d.24xlarge)
export GPU_NODEGROUP_SIZES=(2 0)
export GPU_NODEGROUP_OPTIONS="--region ${CLUSTER_REGION} --nodes-min 1 --nodes-max 10 --nodes 1 --node-volume-size 60 --node-volume-type gp3 --node-ami-family AmazonLinux2 \
--node-private-networking --node-labels processor=gpu --asg-access --external-dns-access --full-ecr-access --alb-ingress-access \
--appmesh-access --managed --install-nvidia-plugin --node-zones us-east-1b"
# --spot
# --node-zones us-east-1a
# --node-ami ami-0bb0f156481e1c7f9

# ASIC Nodegroups
export ASIC_NODEGROUP_INSTANCE_TYPES=()
export ASIC_NODEGROUP_SIZES=()
export ASIC_NODEGROUP_OPTIONS="--region ${CLUSTER_REGION} --nodes-min 1 --nodes-max 10 --nodes 1 --node-volume-size 60 --node-volume-type gp3 --node-ami-family AmazonLinux2 \
--node-private-networking --node-labels processor=asic --asg-access --external-dns-access --full-ecr-access --alb-ingress-access \
--appmesh-access --install-neuron-plugin"

# Fargate Profiles
export SERVERLESS_FARGATE_PROFILE_NAMES=()
